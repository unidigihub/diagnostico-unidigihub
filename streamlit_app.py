import streamlit as st
import firebase_admin
from firebase_admin import credentials, firestore

# --- Inicializaci√≥n Firebase ---
if not firebase_admin._apps:
    cred = credentials.ApplicationDefault()
    firebase_admin.initialize_app(cred, {
        'projectId': 'diagnostico-unidigihub',
    })
db = firestore.client()

# --- Configuraci√≥n p√°gina ---
st.set_page_config(page_title="Diagn√≥stico UniDigiHub", layout="centered")
st.image("logo_unidigihub.png", width=200)

# --- Variables de color UniDigiHub ---
COLOR_AZUL = "#1E90FF"   # Innovaci√≥n tecnol√≥gica
COLOR_VERDE = "#6DBE45"  # Desarrollo sostenible

# --- Estilos CSS globales para botones ---
st.markdown(f"""
<style>
div.stButton > button {{
    color: white;
    height: 500px;
    width: 500px;
    border-radius: 12px;
    border: none;
    font-size: 18px;
    font-weight: 300;
    cursor: pointer;
    transition: background-color 0.3s ease;
    background-color: {COLOR_AZUL};
}}
div.stButton > button:focus {{
    outline: none;
    box-shadow: 0 0 0 3px {COLOR_VERDE};
}}
div.stButton > button:hover {{
    filter: brightness(85%);
}}
</style>
""", unsafe_allow_html=True)

# --- Inicializar control de secci√≥n ---
if "seccion_actual" not in st.session_state:
    st.session_state.seccion_actual = 1

# --- Secci√≥n 1 ---
def mostrar_seccion_1():
    st.title("Secci√≥n 1: Datos demogr√°ficos")
    st.markdown("""
    ### üëã ¬°Bienvenida y bienvenido al Diagn√≥stico UniDigiHub!

    Este autodiagn√≥stico tiene como prop√≥sito conocerte mejor para ayudarte a identificar tu punto de partida en el mundo digital.

    üí° **Tu participaci√≥n nos permitir√° dise√±ar experiencias formativas m√°s inclusivas, √∫tiles y adaptadas a tu realidad.**

    No se requiere experiencia previa. Solo responde con sinceridad üòä
    """)

    with st.form("form_datos_demograficos"):
        paises = [
            "M√©xico (Mƒìxihco)", "Colombia", "Chile", "Brasil", "Argentina",
            "Costa Rica", "Ecuador", "El Salvador", "Per√∫"
        ]
        pais = st.selectbox("1. ¬øEn qu√© pa√≠s resides?", paises)
        departamento = st.text_input("2. Departamento o Estado donde vives")
        comunidad = st.text_input("3. Municipio o comunidad")
        edad = st.slider("4. ¬øCu√°l es tu edad?", min_value=25, max_value=90, step=1)
        genero = st.selectbox(
            "5. ¬øCon qu√© g√©nero te identificas?",
            ["Femenino", "Masculino", "No binario", "Prefiero no decir", "Muxe (zapoteco)", "Otro"]
        )
        nivel_educativo = st.selectbox(
            "6. ¬øCu√°l es tu nivel educativo m√°s alto alcanzado?",
            [
                "Primaria incompleta", "Primaria completa", "Secundaria",
                "T√©cnico", "Universitario üéì", "Posgrado"
            ]
        )
        situacion_laboral = st.multiselect(
            "7. ¬øCu√°l es tu situaci√≥n laboral actual?",
            [
                "Agricultura de subsistencia", "Empleo informal",
                "Estudiante", "Desempleado", "Trabajo remoto"
            ]
        )
        acceso_tecnologia = st.multiselect(
            "8. ¬øQu√© acceso tecnol√≥gico tienes actualmente?",
            [
                "üì± Tel√©fono m√≥vil (sin internet)",
                "üì±üíª Tel√©fono con internet",
                "üíª Computadora/Tablet",
                "üì∂ Internet estable en casa",
                "‚ùå Ninguno"
            ]
        )

        enviado = st.form_submit_button("Enviar secci√≥n 1")

    if enviado:
        doc = {
            "pais": pais,
            "departamento": departamento,
            "comunidad": comunidad,
            "edad": edad,
            "genero": genero,
            "nivel_educativo": nivel_educativo,
            "situacion_laboral": situacion_laboral,
            "acceso_tecnologia": acceso_tecnologia,
            "timestamp": firestore.SERVER_TIMESTAMP
        }

        db.collection("diagnostico_seccion1").add(doc)

        if "‚ùå Ninguno" in acceso_tecnologia:
            st.warning("üîî No cuentas con tecnolog√≠a. Recuerda que puedes solicitar contenido por SMS o radio.")
        elif "üì± Tel√©fono m√≥vil (sin internet)" in acceso_tecnologia:
            st.info("üì≤ Se te priorizar√° para contenidos v√≠a WhatsApp.")

        st.success("‚úÖ ¬°Gracias! Secci√≥n 1 enviada correctamente.")
        st.session_state.seccion_1_enviado = True

# --- Secci√≥n 2 ---
def mostrar_seccion_2():
    st.title("Secci√≥n 2: Problem√°ticas locales")
    st.write("Por favor, responde estas preguntas sobre los desaf√≠os que enfrenta tu comunidad.")

    with st.form("form_seccion2"):
        problema_principal = st.text_area(
            "1. Describe el problema principal que afecta a tu comunidad",
            placeholder='Ejemplo: "Sequ√≠a en cultivos", "Falta de acceso a servicios de salud", "Cortes frecuentes de energ√≠a"'
        )
        sectores = st.multiselect(
            "2. ¬øCon qu√© sectores crees que se relaciona este problema?",
            options=[
                "Agricultura y tecnolog√≠a",
                "Finanzas digitales",
                "Salud comunitaria",
                "Energ√≠a limpia"
            ]
        )
        impacto = st.slider(
            "3. ¬øCu√°l es el impacto del problema en tu comunidad?",
            min_value=1, max_value=5, value=3,
            format="%d (1= Bajo impacto, 5= Cr√≠tico)"
        )
        impacto_descripcion = st.text_area(
            "¬øC√≥mo afecta este problema a tu comunidad?"
        )
        soluciones = st.multiselect(
            "4. ¬øQu√© soluciones se han intentado para este problema?",
            options=[
                "Tecnolog√≠a b√°sica (ej: apps m√≥viles)",
                "M√©todos tradicionales",
                "Ninguna"
            ]
        )
        texto_soluciones = st.text_area(
            "Describe brevemente soluciones fallidas o exitosas"
        )
        recursos = st.multiselect(
            "5. ¬øQu√© recursos tiene tu comunidad para enfrentar este problema?",
            options=[
                "Acceso a internet",
                "Tierra cultivable",
                "Mano de obra",
                "Ninguno"
            ]
        )

        enviado = st.form_submit_button("Enviar secci√≥n 2")

    if enviado:
        doc = {
            "problema_principal": problema_principal,
            "sectores": sectores,
            "impacto": impacto,
            "impacto_descripcion": impacto_descripcion,
            "soluciones": soluciones,
            "texto_soluciones": texto_soluciones,
            "recursos": recursos,
            "timestamp": firestore.SERVER_TIMESTAMP
        }
        db.collection("diagnostico_seccion2").add(doc)
        st.success("‚úÖ ¬°Gracias! Secci√≥n 2 enviada correctamente.")
        st.session_state.seccion_2_enviado = True

# --- Mostrar secci√≥n seg√∫n estado ---
if st.session_state.seccion_actual == 1:
    mostrar_seccion_1()
elif st.session_state.seccion_actual == 2:
    mostrar_seccion_2()
else:
    st.title("¬°Gracias por completar el diagn√≥stico!")
    st.write("Pronto te contactaremos con tus resultados y rutas personalizadas.")

# --- Navegaci√≥n (mejorada visualmente) ---
st.markdown("""<style>
.nav-button {
    display: inline-block;
    background-color: #1E90FF;
    color: white;
    padding: 10px 24px;
    font-size: 16px;
    font-weight: 600;
    border: none;
    border-radius: 10px;
    text-align: center;
    margin: 10px;
}
.nav-button:disabled {
    background-color: #ccc;
}
</style>""", unsafe_allow_html=True)

col1, col2, col3 = st.columns([1,6,1])
with col1:
    if st.session_state.seccion_actual > 1:
        if st.button("‚¨ÖÔ∏è Secci√≥n anterior"):
            st.session_state.seccion_actual -= 1

with col3:
    seccion_actual = st.session_state.seccion_actual
    seccion_enviada = st.session_state.get(f"seccion_{seccion_actual}_enviado", False)

    if seccion_enviada:
        if st.button("Siguiente ‚û°Ô∏è"):
            st.session_state.seccion_actual += 1
    else:
        st.markdown('<button class="nav-button" disabled>Completa la secci√≥n</button>', unsafe_allow_html=True)
