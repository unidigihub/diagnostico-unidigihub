import streamlit as st
import firebase_admin
from firebase_admin import credentials, firestore

# --- Inicializaci√≥n Firebase ---
if not firebase_admin._apps:
    cred = credentials.ApplicationDefault()
    firebase_admin.initialize_app(cred, {
        'projectId': 'diagnostico-unidigihub',
    })
db = firestore.client()

st.set_page_config(page_title="Diagn√≥stico UniDigiHub", layout="centered")
st.image("logo_unidigihub.png", width=200)

# Inicializar variable para control de secciones
if "seccion_actual" not in st.session_state:
    st.session_state.seccion_actual = 1

# Funci√≥n para mostrar Secci√≥n 1
def mostrar_seccion_1():
    st.title("Secci√≥n 1: Datos demogr√°ficos")
    st.markdown("""
    ### üëã ¬°Bienvenida y bienvenido al Diagn√≥stico UniDigiHub!
    Este autodiagn√≥stico tiene como prop√≥sito conocerte mejor para ayudarte a identificar tu punto de partida en el mundo digital.
    """)

    with st.form("form_datos_demograficos"):
        paises = [
            "M√©xico (Mƒìxihco)", "Colombia", "Chile", "Brasil", "Argentina",
            "Costa Rica", "Ecuador", "El Salvador", "Per√∫"
        ]
        pais = st.selectbox("1. ¬øEn qu√© pa√≠s resides?", paises)
        departamento = st.text_input("2. Departamento o Estado donde vives")
        comunidad = st.text_input("3. Municipio o comunidad")
        edad = st.slider("4. ¬øCu√°l es tu edad?", min_value=15, max_value=90, step=1)
        genero = st.selectbox(
            "5. ¬øCon qu√© g√©nero te identificas?",
            ["Femenino", "Masculino", "No binario", "Prefiero no decir", "Muxe (zapoteco)", "Otro"]
        )
        nivel_educativo = st.selectbox(
            "6. ¬øCu√°l es tu nivel educativo m√°s alto alcanzado?",
            [
                "Primaria incompleta", "Primaria completa", "Secundaria",
                "T√©cnico", "Universitario üéì", "Posgrado"
            ]
        )
        situacion_laboral = st.multiselect(
            "7. ¬øCu√°l es tu situaci√≥n laboral actual?",
            [
                "Agricultura de subsistencia", "Empleo informal",
                "Estudiante", "Desempleado", "Trabajo remoto"
            ]
        )
        acceso_tecnologia = st.multiselect(
            "8. ¬øQu√© acceso tecnol√≥gico tienes actualmente?",
            [
                "üì± Tel√©fono m√≥vil (sin internet)",
                "üì±üíª Tel√©fono con internet",
                "üíª Computadora/Tablet",
                "üì∂ Internet estable en casa",
                "‚ùå Ninguno"
            ]
        )

        enviado = st.form_submit_button("Enviar secci√≥n 1")

    if enviado:
        doc = {
            "pais": pais,
            "departamento": departamento,
            "comunidad": comunidad,
            "edad": edad,
            "genero": genero,
            "nivel_educativo": nivel_educativo,
            "situacion_laboral": situacion_laboral,
            "acceso_tecnologia": acceso_tecnologia,
            "timestamp": firestore.SERVER_TIMESTAMP
        }

        db.collection("diagnostico_seccion1").add(doc)

        st.success("‚úÖ ¬°Gracias! Secci√≥n 1 enviada correctamente.")
        # Cambiar a la siguiente secci√≥n
        st.session_state.seccion_actual = 2

# Funci√≥n para mostrar Secci√≥n 2
def mostrar_seccion_2():
    st.title("Secci√≥n 2: Problem√°ticas locales")
    st.write("Por favor, responde estas preguntas sobre los desaf√≠os que enfrenta tu comunidad.")

    with st.form("form_seccion2"):
        problema_principal = st.text_area(
            "1. Describe el problema principal que afecta a tu comunidad",
            placeholder='Ejemplo: "Sequ√≠a en cultivos", "Falta de acceso a servicios de salud", "Cortes frecuentes de energ√≠a"'
        )
        sectores = st.multiselect(
            "2. ¬øCon qu√© sectores crees que se relaciona este problema?",
            options=[
                "Agricultura y tecnolog√≠a",
                "Finanzas digitales",
                "Salud comunitaria",
                "Energ√≠a limpia"
            ]
        )
        impacto = st.slider(
            "3. ¬øCu√°l es el impacto del problema en tu comunidad?",
            min_value=1, max_value=5, value=3,
            format="%d (1= Bajo impacto, 5= Cr√≠tico)"
        )
        impacto_descripcion = st.text_area(
            "¬øC√≥mo afecta este problema a tu comunidad?"
        )
        soluciones = st.multiselect(
            "4. ¬øQu√© soluciones se han intentado para este problema?",
            options=[
                "Tecnolog√≠a b√°sica (ej: apps m√≥viles)",
                "M√©todos tradicionales",
                "Ninguna"
            ]
        )
        texto_soluciones = st.text_area(
            "Describe brevemente soluciones fallidas o exitosas"
        )
        recursos = st.multiselect(
            "5. ¬øQu√© recursos tiene tu comunidad para enfrentar este problema?",
            options=[
                "Acceso a internet",
                "Tierra cultivable",
                "Mano de obra",
                "Ninguno"
            ]
        )

        enviado = st.form_submit_button("Enviar secci√≥n 2")

    if enviado:
        doc = {
            "problema_principal": problema_principal,
            "sectores": sectores,
            "impacto": impacto,
            "impacto_descripcion": impacto_descripcion,
            "soluciones": soluciones,
            "texto_soluciones": texto_soluciones,
            "recursos": recursos,
            "timestamp": firestore.SERVER_TIMESTAMP
        }
        db.collection("diagnostico_seccion2").add(doc)
        st.success("‚úÖ ¬°Gracias! Secci√≥n 2 enviada correctamente.")
       
elif st.session_state.seccion_actual == 3:
    mostrar_seccion_3()
def mostrar_seccion_3():
    st.title("Secci√≥n 3: Intereses profesionales")
    st.write("Queremos conocerte mejor para ayudarte a dise√±ar una ruta de aprendizaje personalizada.")

    with st.form("form_seccion3"):
        # 1. Sector de inter√©s
        sector = st.selectbox(
            "1. ¬øCu√°l es el sector que m√°s te interesa?",
            ["üå± AgriTech", "üí∞ FinTech", "üè• HealthTech", "üåû Energ√≠as Renovables"]
        )

        # 2. Experiencia previa
        nivel = st.radio(
            "2. ¬øQu√© nivel de experiencia tienes?",
            ["üîç UniExplorador (Ninguna/baja experiencia)", 
             "üõ†Ô∏è UniCreador (Experiencia b√°sica en proyectos)", 
             "üöÄ UniVisionario (Experiencia avanzada con resultados)"]
        )
        descripcion_exp = st.text_area(
            "Describe tu experiencia (Ejemplo: curso b√°sico de IoT):"
        )

        # 3. √Åreas de inter√©s (dependen del nivel seleccionado)
        st.write("3. Selecciona tus √°reas de inter√©s:")
        if "UniExplorador" in nivel:
            areas = st.multiselect(
                "Opciones para UniExplorador",
                ["Introducci√≥n a IoT", "Conceptos b√°sicos de blockchain"]
            )
        elif "UniCreador" in nivel:
            areas = st.multiselect(
                "Opciones para UniCreador",
                ["Dise√±o de apps AgriTech", "An√°lisis de datos en salud"]
            )
        elif "UniVisionario" in nivel:
            areas = st.multiselect(
                "Opciones para UniVisionario",
                ["Optimizaci√≥n de redes neuronales", "Sistemas aut√≥nomos de energ√≠a"]
            )
        else:
            areas = []

        # 4. Complejidad deseada
        complejidad = st.slider(
            "4. ¬øQu√© nivel de profundidad deseas alcanzar?",
            0, 10, 3,
            help="0 = B√°sico (Ej: Aprender a usar sensores), 10 = Avanzado (Ej: Desarrollar un MVP escalable)"
        )
        if complejidad >= 8 and "UniExplorador" in nivel:
            st.warning("‚ö†Ô∏è El nivel seleccionado es muy avanzado para un perfil Explorador. Considera ajustar tu nivel o tomar una formaci√≥n b√°sica primero.")

        # 5. Proyecto deseado
        proyecto = st.text_area(
            "5. Describe una idea de proyecto que te gustar√≠a desarrollar.\n\nEjemplos:\n- UniExplorador: Crear un huerto con sensores b√°sicos\n- UniCreador: Automatizar riego con Arduino\n- UniVisionario: Modelar una red inteligente de energ√≠a solar"
        )

        enviado = st.form_submit_button("Enviar secci√≥n 3")

    if enviado:
        doc = {
            "sector_interes": sector,
            "nivel_experiencia": nivel,
            "descripcion_experiencia": descripcion_exp,
            "areas_interes": areas,
            "complejidad_deseada": complejidad,
            "proyecto_deseado": proyecto,
            "timestamp": firestore.SERVER_TIMESTAMP
        }
        db.collection("diagnostico_seccion3").add(doc)
        st.success("‚úÖ ¬°Gracias! Has completado la Secci√≥n 3.")
        st.session_state.seccion_actual = 4


# Mostrar secci√≥n seg√∫n variable de estado
if st.session_state.seccion_actual == 1:
    mostrar_seccion_1()
elif st.session_state.seccion_actual == 2:
    mostrar_seccion_2()

# Botones para navegar entre secciones manualmente (opcional)
col1, col2, col3 = st.columns([1,6,1])

with col1:
    if st.session_state.seccion_actual > 1:
        if st.button("‚¨ÖÔ∏è Secci√≥n anterior"):
            st.session_state.seccion_actual -= 1

with col3:
    if st.session_state.seccion_actual < 7:
        if st.button("Siguiente ‚û°Ô∏è"):
            st.session_state.seccion_actual += 1
